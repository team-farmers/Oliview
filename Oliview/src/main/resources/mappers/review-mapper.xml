<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 연결할 인터페이스의 패키지명.인터페이스명을 작성 -->
<mapper namespace="com.farmers.oliview.review.model.mapper.ReviewMapper">
	
	
	
	<!-- 전체 리뷰수 조회 -->
	<select id="getReviewCount" resultType="_int">
		SELECT COUNT(*) FROM "REVIEW"
		WHERE REVIEW_DEL_FL = 'N'
	</select>
	
	<!-- 전체 리뷰 조회 -->
	<select id="AllReview" resultType="Review">
		SELECT REVIEW_NO, REVIEW_IMG, REVIEW_TITLE, MEMBER_NICKNAME, STAR_TASTE, STAR_AMOUNT, STAR_CLEAN, 
					TO_CHAR(WRITE_DATE, 'YYYY"." MM"." DD"."') WRITE_DATE
		FROM "REVIEW"
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE REVIEW_DEL_FL = 'N'
		ORDER BY READ_COUNT
	</select>
	
	
	<!-- 리뷰 검색 -->
	<select id="searchReview" resultType="Review">
		SELECT REVIEW_NO, REVIEW_IMG, REVIEW_TITLE, MEMBER_NICKNAME, STAR_TASTE, STAR_AMOUNT, STAR_CLEAN, 
					TO_CHAR(WRITE_DATE, 'YYYY"." MM"." DD"."') WRITE_DATE
		FROM "REVIEW"
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE REVIEW_TITLE LIKE '%${searchInput}%'
		ORDER BY READ_COUNT
	</select>
	
	
		<!-- 리뷰 검색 -->
	<select id="searchReviewNick" resultType="Review">
		SELECT REVIEW_NO, REVIEW_IMG, REVIEW_TITLE, MEMBER_NICKNAME, STAR_TASTE, STAR_AMOUNT, STAR_CLEAN, 
					TO_CHAR(WRITE_DATE, 'YYYY"." MM"." DD"."') WRITE_DATE
		FROM "REVIEW"
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE MEMBER_NICKNAME = #{memberNickname}
		ORDER BY READ_COUNT
	</select>
	
	
	
	<!-- 리뷰 상세 조회 -->
	<select id="reviewDetail" resultType="Review">
		SELECT REVIEW_TITLE, REVIEW_ADDRESS, REVIEW_IMG, MEMBER_PROFILE, MEMBER_NICKNAME, STAR_TASTE,
				STAR_AMOUNT, STAR_CLEAN,ROUND((STAR_TASTE+STAR_AMOUNT+STAR_CLEAN)/3,1) STAR_TOTAL , REVIEW_MENU, REVIEW_ONELINE
		FROM "REVIEW"
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE REVIEW_DEL_FL = 'N'
		AND REVIEW_NO = #{reviewNo}
	</select>
	
	
	<!-- 리뷰 찜 여부 확인 -->
	<select id="likeCheck" resultType="_int">
		SELECT COUNT(*) FROM "LIKE"
		WHERE REVIEW_NO = #{reviewNo}
		AND MEMBER_NO = #{memberNo}
	</select>
	
   	<!-- 찜 테이블 행 삭제 -->
	<delete id="deleteReviewLike">
		DELETE FROM "LIKE"
		WHERE MEMBER_NO = #{memberNo}
		AND REVIEW_NO = #{reviewNo}
	</delete>
 

	<!-- 찜 테이블 행 삽입 -->
	<insert id="insertReviewLike">
		INSERT INTO "LIKE" (MEMBER_NO, REVIEW_NO)
		VALUES(#{memberNo}, #{reviewNo})
	</insert>
	
	
	<!-- 조회수 증가 -->
	<update id="updateReadCount">
		UPDATE "REVIEW" SET
		READ_COUNT = READ_COUNT + 1
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	
	<!-- 다른 리뷰 -->
	<select id="otherReview" resultType="Review">
		SELECT REVIEW_NO, REVIEW_IMG, REVIEW_TITLE, MEMBER_NICKNAME, STAR_TASTE, STAR_AMOUNT, STAR_CLEAN, 
					TO_CHAR(WRITE_DATE, 'YYYY"." MM"." DD"."') WRITE_DATE
		FROM "REVIEW"
		JOIN "MEMBER" USING (MEMBER_NO)
		WHERE REVIEW_TITLE = #{reviewTitle}
		AND ROWNUM BETWEEN 1 AND 4
		ORDER BY READ_COUNT
	</select>
	
	
	

</mapper>