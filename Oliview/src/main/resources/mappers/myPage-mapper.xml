<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 연결할 인터페이스의 패키지명.인터페이스명을 작성 -->
<mapper namespace="com.farmers.oliview.myPage.model.mapper.MyPageMapper">
   
   
   <!--회원 탈퇴-->
   <update id="secession">
	    UPDATE "MEMBER" 
 		SET MEMBER_DEL_FL ='Y'
		WHERE MEMBER_NO = #{memberNo}
   </update>
   
   <!--프로필 이미지 수정-->
   <update id="profile">
	    UPDATE "MEMBER" SET
		MEMBER_PROFILE = #{memberProfile}
		WHERE MEMBER_NO = #{memberNo}
   </update>
   
   <!--닉네임 수정-->
   <update id="editProfile">
	    UPDATE "MEMBER" SET
		MEMBER_NICKNAME = #{memberNickname}
		WHERE MEMBER_NO = #{memberNo}
   </update>
   
   <!--이메일 수정-->
   <update id="editInfo">
	    UPDATE "MEMBER" SET
		MEMBER_EMAIL = #{memberEmail}
		WHERE MEMBER_NO = #{memberNo}
   </update>
   
   <!--기존 비밀번호 가져오기-->
   <select id="findPw" resultType="string">
        SELECT MEMBER_PW 
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
   </select>
   
   <!--비밀번호 변경-->
   <update id="changePw">
	   	UPDATE "MEMBER" SET 
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_NO = #{memberNo}
   </update>
   
   <!--내가 쓴 글 게시글 수 확인-->
   <select id="getListCount" resultType="_int">
	   SELECT COUNT(*) FROM
			(SELECT 'R-' || REVIEW_NO  FROM REVIEW
			WHERE MEMBER_NO = #{memberNo}
			AND REVIEW_DEL_FL = 'N'
			UNION
			SELECT 'T-' || BOARD_NO FROM TOGETHER
			WHERE MEMBER_NO = #{memberNo}
			AND BOARD_DEL_FL = 'N')
   </select>
   
    <!-- 내가 쓴 글 목록 불러오기 -->
	<select id="selectMyArticleList" resultType="java.util.HashMap">
		SELECT * FROM 
			(SELECT 'REIVEW' "boardName", REVIEW_TITLE "title", 
			TO_CHAR(WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') "writeDate",
			'/review/' || REVIEW_NO "url"
			FROM REVIEW
			WHERE MEMBER_NO = #{memberNo}
			AND REVIEW_DEL_FL = 'N'
			UNION
			SELECT '같이 먹어요', BOARD_TITLE , 
			TO_CHAR(DATE_CREATED, 'YYYY-MM-DD HH24:MI:SS') "writeDate",
			'/together/' || BOARD_NO "url"
			FROM TOGETHER
			WHERE MEMBER_NO = #{memberNo}
			AND BOARD_DEL_FL = 'N')
			
		ORDER BY "writeDate" DESC
	</select>   
	
	
	<!--찜한 글 게시글 수 확인-->
    <select id="getChoiceListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "LIKE" L
		JOIN REVIEW USING (REVIEW_NO)
		WHERE L.MEMBER_NO = #{memberNo}
		AND REVIEW_DEL_FL = 'N'
	</select>
	
	<!--찜한 글 게시글 목록 불러오기-->
	<select id="choiceArticleList" resultType="java.util.HashMap">
		SELECT 'REIVEW' "boardName", REVIEW_TITLE "title", 
			TO_CHAR(WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') "writeDate",
			'/review/' || REVIEW_NO "url"
		FROM "LIKE" L
		JOIN REVIEW USING (REVIEW_NO)
		WHERE L.MEMBER_NO = #{memberNo}
	</select>
	
	
	<!-- 내가 작성한 댓글 수 확인-->
	<select id="getMyCommentListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "COMMENT"
		WHERE MEMBER_NO = #{memberNo}
		AND COMMENT_DEL_FL = 'N'
	</select>
	
	<!-- 내가 작성한 댓글 목록 불러오기 -->
	<select id="myCommentList" resultType="Comment">
		SELECT COMMENT_NO, COMMENT_CONTENT, REVIEW_TITLE, 
			TO_CHAR(WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') COMMENT_WRITE_DATE,
			'/review/' || R.REVIEW_NO "URL",
			(SELECT COUNT(*)
				FROM "COMMENT" C2
				WHERE C2.REVIEW_NO = C.REVIEW_NO)
				COMMENT_COUNT
		FROM "COMMENT" C
		JOIN REVIEW R ON (C.REVIEW_NO = R.REVIEW_NO)
		WHERE C.MEMBER_NO = #{memberNo}
		AND COMMENT_DEL_FL = 'N'
	</select>
	
	
	<!--선택한 댓글 삭제하기-->
	<update id="deleteComments">
		UPDATE "COMMENT" SET
		COMMENT_DEL_FL ='Y'
		WHERE COMMENT_NO = #{commentNo}
	</update>
	
   

</mapper>